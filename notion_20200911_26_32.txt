-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- USER Table Create SQL
CREATE TABLE USER
(
    U_NUM       NUMBER           NOT NULL, 
    ID          VARCHAR2(100)    NOT NULL, 
    PASSWORD    VARCHAR2(100)    NOT NULL, 
    U_NAME      VARCHAR2(100)    NOT NULL, 
    ADDRESS     VARCHAR2(100)    NOT NULL, 
    EMAIL       VARCHAR2(100)    NOT NULL, 
    PHONE       VARCHAR2(100)    NOT NULL, 
    DATE        DATE             NOT NULL, 
    CONSTRAINT USER_PK PRIMARY KEY (U_NUM)
)
/


-- USER Table Create SQL
CREATE TABLE GROUP
(
    G_NUM        NUMBER           NOT NULL, 
    NAME         VARCHAR2(100)    NOT NULL, 
    U_NAME       VARCHAR2(100)    NOT NULL, 
    DATE         VARCHAR2(100)    NOT NULL, 
    SUBJECT      VARCHAR2(100)    NOT NULL, 
    THUMBNAIL    VARCHAR2(100)    NOT NULL, 
    CONSTRAINT GROUP_PK PRIMARY KEY (G_NUM)
)
/

ALTER TABLE GROUP
    ADD CONSTRAINT FK_GROUP_U_NAME_USER_U_NAME FOREIGN KEY (U_NAME)
        REFERENCES USER (U_NAME)
/


-- USER Table Create SQL
CREATE TABLE DEPARTMENT
(
    D_NUM     NUMBER           NOT NULL, 
    G_NUM     NUMBER           NOT NULL, 
    DEPART    VARCHAR2(100)    NOT NULL, 
    CONSTRAINT DEPARTMENT_PK PRIMARY KEY (D_NUM)
)
/

ALTER TABLE DEPARTMENT
    ADD CONSTRAINT FK_DEPARTMENT_G_NUM_GROUP_G_NU FOREIGN KEY (G_NUM)
        REFERENCES GROUP (G_NUM)
/


-- USER Table Create SQL
CREATE TABLE MEMBER
(
    M_NUM        NUMBER           NOT NULL, 
    G_NUM        NUMBER           NOT NULL, 
    U_NUM        NUMBER           NOT NULL, 
    AUTHORITY    VARCHAR2(100)    NOT NULL, 
    ROLE         VARCHAR2(100)    NOT NULL, 
    D_NUM        NUMBER           NOT NULL, 
    CONSTRAINT MEMBER_PK PRIMARY KEY (M_NUM)
)
/

ALTER TABLE MEMBER
    ADD CONSTRAINT FK_MEMBER_G_NUM_GROUP_G_NUM FOREIGN KEY (G_NUM)
        REFERENCES GROUP (G_NUM)
/

ALTER TABLE MEMBER
    ADD CONSTRAINT FK_MEMBER_U_NUM_USER_U_NUM FOREIGN KEY (U_NUM)
        REFERENCES USER (U_NUM)
/

ALTER TABLE MEMBER
    ADD CONSTRAINT FK_MEMBER_D_NUM_DEPARTMENT_D_N FOREIGN KEY (D_NUM)
        REFERENCES DEPARTMENT (D_NUM)
/


-- USER Table Create SQL
CREATE TABLE CHATROOM
(
    ROOM_ID    NUMBER    NOT NULL, 
    CONSTRAINT CHATROOM_PK PRIMARY KEY (ROOM_ID)
)
/


-- USER Table Create SQL
CREATE TABLE PROJECT
(
    P_NUM    NUMBER           NOT NULL, 
    G_NUM    VARCHAR2(100)    NULL, 
    NAME     VARCHAR2(100)    NULL, 
    M_NUM    VARCHAR2(100)    NULL, 
    CONSTRAINT PROJECT_PK PRIMARY KEY (P_NUM)
)
/


-- USER Table Create SQL
CREATE TABLE WORK
(
    W_NUM       NUMBER            NOT NULL, 
    M_NUM       NUMBER            NOT NULL, 
    P_NUM       VARCHAR2          NOT NULL, 
    TITLE       VARCHAR2(100)     NOT NULL, 
    TEXT        VARCHAR2(3000)    NULL, 
    PROGRESS    VARCHAR2(100)     NOT NULL, 
    CONSTRAINT WORK_PK PRIMARY KEY (W_NUM)
)
/

ALTER TABLE WORK
    ADD CONSTRAINT FK_WORK_M_NUM_MEMBER_M_NUM FOREIGN KEY (M_NUM)
        REFERENCES MEMBER (M_NUM)
/

ALTER TABLE WORK
    ADD CONSTRAINT FK_WORK_P_NUM_PROJECT_P_NUM FOREIGN KEY (P_NUM)
        REFERENCES PROJECT (P_NUM)
/


-- USER Table Create SQL
CREATE TABLE CHATMESSAGE
(
    M_NUM      NUMBER            NOT NULL, 
    ROOM_ID    NUMBER            NOT NULL, 
    DATE       VARCHAR2(100)     NULL, 
    CONTENT    VARCHAR2(3000)    NULL, 
    FILE       BLOB              NULL, 
    CONSTRAINT CHATMESSAGE_PK PRIMARY KEY (M_NUM)
)
/

ALTER TABLE CHATMESSAGE
    ADD CONSTRAINT FK_CHATMESSAGE_M_NUM_MEMBER_M_ FOREIGN KEY (M_NUM)
        REFERENCES MEMBER (M_NUM)
/

ALTER TABLE CHATMESSAGE
    ADD CONSTRAINT FK_CHATMESSAGE_ROOM_ID_CHATROO FOREIGN KEY (ROOM_ID)
        REFERENCES CHATROOM (ROOM_ID)
/


-- USER Table Create SQL
CREATE TABLE CHATID
(
    M_NUM      NUMBER    NOT NULL, 
    ROOM_ID    NUMBER    NOT NULL, 
    CONSTRAINT CHATID_PK PRIMARY KEY (M_NUM)
)
/

ALTER TABLE CHATID
    ADD CONSTRAINT FK_CHATID_M_NUM_MEMBER_M_NUM FOREIGN KEY (M_NUM)
        REFERENCES MEMBER (M_NUM)
/

ALTER TABLE CHATID
    ADD CONSTRAINT FK_CHATID_ROOM_ID_CHATROOM_ROO FOREIGN KEY (ROOM_ID)
        REFERENCES CHATROOM (ROOM_ID)
/


